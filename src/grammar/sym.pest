WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
whitespaces = { " " | "\t" | "\r" | "\n" }
COMMENT = _{ "//" ~ (! ("\n" | "\r\n" | "\r") ~ ANY)* ~ ("\n" | "\r\n" | "\r") }

octdigit = { '0' .. '7' }
decdigit = { octdigit | '8' .. '9' }
hexdigit = { decdigit | 'a' .. 'f' | 'A' .. 'F'}
alpha = { 'a'..'z' | 'A'..'Z' }
bool_true = { "True" }
bool_false = { "False" }
bool = { bool_true | bool_false }

sym = {format_version ~ title ~ body}
format_version = {"FormatVersion" ~ "=" ~ "6.0"}
title = {"Title" ~ "=" ~ string}
body = { enums? ~ signals? ~ send? ~ receive? ~ sendreceive?}

number = @{ decdigit+ }
hexnumber = @{hexdigit+ ~ "h"}
id = @{ (alpha | decdigit | "_" | "/")+ }
string = {"\"" ~ (!"\"" ~ ANY)* ~ "\""}

enums = {"{ENUMS}" ~ enum_entry*}
enum_entry = {"Enum" ~ "=" ~ id ~ "(" ~ enum_list? ~ ")" ~ binary_mask_option?}
binary_mask_option = {"-b"}
enum_list = {enum_item ~ ("," ~ enum_item)*}
enum_item = {number ~ "=" ~ string | number ~ ".." ~ number ~ "=" ~ string }

signals = {"{SIGNALS}"}
send = {"{SEND}" ~ message*}
receive = {"{RECEIVE}" ~ message*}
sendreceive = {"{SENDRECEIVE}" ~ message*}

message = { "[" ~ (id | string) ~ "]" ~ message_id? ~ message_type? ~ message_brs? ~ message_length? ~ message_cycle? ~ message_color? ~ message_mux? ~ message_signals?}
message_id = { "ID" ~ "=" ~ hexnumber }
message_type = { "Type" ~ "=" ~ ("Extended" | "Standard" | "FDExtended" | "FDStandard") }
message_brs = { "BRS" ~ "=" ~ bool }
message_length = { "Len" ~ "="  ~ number }
message_cycle = { "CycleTime" ~ "=" ~ number ~ cycle_stopped? }
cycle_stopped = { "-p" }
message_color = { "Color" ~ "=" ~ hexnumber }
message_mux = { "Mux" ~ "=" ~ (id | string) ~ number ~ "," ~ number ~ number ~ disable_show_option? ~ trace_option?}
disable_show_option = { "-o" }
trace_option = { "-t" }

message_signals = {message_signal+}
message_signal = { "Var" ~ "=" ~ (id | string) ~ signal_type ~ signal_start_length ~ signal_show_format? ~ signal_big_endian? ~ signal_trace? ~ signal_standard? ~ signal_unit? ~ signal_factor? ~ signal_offset? ~ signal_min? ~ signal_max? ~ signal_dec_points? ~ signal_enum? ~ signal_default? ~ signal_long_name?}
signal_type = { "bit" | "char" | "string" | "signed" | "unsigned" | "float" | "enum" | "double" | "raw"}
signal_start_length = { number ~ "," ~ number }
signal_show_format = { bin_format | hex_format }
bin_format = { "-b" }
hex_format = { "-h" }
signal_big_endian = { "-m" }
signal_trace = { "-t" }
signal_standard = { "-s" }
signal_unit = { "/u:" ~ (id | string) }
signal_factor = {"/f:" ~ number} // change to support floats
signal_offset = {"/o:" ~ number} // change to support floats
signal_min = {"/min:" ~ number} // change to support floats
signal_max = {"/max:" ~ number} // change to support floats
signal_dec_points = {"/p:" ~ number}
signal_enum = { "/e:" ~ id }
signal_default = { "/d:" ~ number } // change to support floats
signal_long_name = { "/ln:" ~ string }
