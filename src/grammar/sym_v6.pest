WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ ("//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE*) | ("/*" ~ (!("*/" | "/*") ~ ANY)* ~ "*/") }

OCTDIGIT = @{ '0' .. '7' }
DECDIGIT = @{ '0' .. '9' }
HEXDIGIT = @{ '0' .. '9' | 'a' .. 'f' | 'A' .. 'F'}
ALPHA = { 'a'..'z' | 'A'..'Z' }
TRUE_LITERAL = { "True" }
FALSE_LITERAL = { "False" }
BOOL = { TRUE_LITERAL | FALSE_LITERAL }

OCT_NUMBER_LITERAL = @{ OCTDIGIT+ ~ "o" }
DEC_NUMBER_LITERAL = @{ DECDIGIT+ }
HEX_NUMBER_LITERAL = @{HEXDIGIT+ ~ "h"}
FLOAT_LITERAL = @{ ("+" | "-")? ~ (DECDIGIT+ ~ ("." ~ DECDIGIT*)? | "." ~ DECDIGIT*) }
INT_LITERAL = @{ ("+" | "-")? ~ DEC_NUMBER_LITERAL }

ID = @{ (ALPHA | DECDIGIT | "_" | "/")+ }
STRING = @{"\"" ~ (!"\"" ~ ANY)* ~ "\""}

main = {SOI ~ sym ~ EOI}
sym = {format_version ~ unique_variables? ~ float_decimal_places? ~ title ~ bitrate_switch? ~ enums? ~ signals? ~ send? ~ receive? ~ send_receive?}
format_version = { "FormatVersion" ~ "=" ~ "6.0" }
unique_variables = { "UniqueVariables" ~ "=" ~ BOOL }
float_decimal_places = { "FloatDecimalPlaces" ~ "=" ~ DEC_NUMBER_LITERAL }
title = {"Title" ~ "=" ~ STRING}
bitrate_switch = { "BRS" ~ "=" ~ BOOL }

bin_option = { "-b" }
dec_option = { "-d" }
hex_option = { "-h" }
big_endian_option = { "-m" }
show_off_option = { "-o" }
trace_option = { "-t" }
standard_option = { "-s" }

enums = {"{ENUMS}" ~ enum_entry*}
enum_entry = {"Enum" ~ "=" ~ ID ~ "(" ~ enum_list? ~ ")" ~ bin_option?}
enum_list = {enum_item ~ ("," ~ enum_item)*}
enum_item = {INT_LITERAL ~ "=" ~ STRING | INT_LITERAL ~ ".." ~ INT_LITERAL ~ "=" ~ STRING }

signals = {
    "{SIGNALS}" ~
    (bit_signal | char_signal | string_signal | signed_signal | unsigned_signal |
    float_signal | double_signal | enum_signal | raw_signal)*
}

send = {"{SEND}" ~ send_message*}
receive = {"{RECEIVE}" ~ receive_message*}
send_receive = {"{SENDRECEIVE}" ~ send_receive_message*}

// MESSAGES
send_message = {
    message_name ~ message_id ~ message_type ~
    bitrate_switch? ~ message_length? ~ message_cycle_time? ~
    message_color? ~ message_mux? ~
    (bit_variable | char_variable | string_variable | signed_variable | unsigned_variable |
    float_variable | double_variable | enum_variable | raw_variable)*
}

receive_message = {
    message_name ~ (message_id | message_id_range) ~ message_type ~
    bitrate_switch? ~ message_length? ~
    message_timeout? ~ message_min_interval? ~
    message_color? ~ message_mux? ~
    (bit_variable | char_variable | string_variable | signed_variable | unsigned_variable |
    float_variable | double_variable | enum_variable | raw_variable)*
}

send_receive_message = {
    message_name ~ message_id ~ message_type ~
    bitrate_switch? ~ message_length? ~
    message_cycle_time? ~ message_timeout? ~ message_min_interval? ~
    message_color? ~ message_mux? ~
    (bit_variable | char_variable | string_variable | signed_variable | unsigned_variable |
    float_variable | double_variable | enum_variable | raw_variable)*
}

message_name = { "[" ~ (ID | STRING) ~ "]" }
message_id = { "ID" ~ "=" ~ HEX_NUMBER_LITERAL }
message_id_range = { "ID" ~ "=" ~ HEX_NUMBER_LITERAL ~ "-" ~ HEX_NUMBER_LITERAL}
message_type = { "Type" ~ "=" ~ ("Extended" | "Standard" | "FDExtended" | "FDStandard") }
message_length = { "Len" ~ "="  ~ DEC_NUMBER_LITERAL }
message_cycle_time = { "CycleTime" ~ "=" ~ DEC_NUMBER_LITERAL ~ cycle_stopped? }
message_timeout = { "Timeout" ~ "=" ~ DEC_NUMBER_LITERAL }
message_min_interval = { "MinInterval" ~ "=" ~ DEC_NUMBER_LITERAL }
cycle_stopped = { "-p" }
message_color = { "Color" ~ "=" ~ HEX_NUMBER_LITERAL }
message_mux = { "Mux" ~ "=" ~ STRING ~ DEC_NUMBER_LITERAL ~ "," ~ DEC_NUMBER_LITERAL ~ FLOAT_LITERAL ~ show_off_option? ~ trace_option?}

// VARIABLES
bit_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "bit" ~
    DEC_NUMBER_LITERAL ~ "," ~ "1" ~
    trace_option ~ standard_option ~
    unit_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

char_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "char" ~
    DEC_NUMBER_LITERAL ~ "," ~ "8" ~
    (bin_option | hex_option)? ~ big_endian_option? ~
    trace_option ~ standard_option ~
    unit_option? ~ min_option? ~ max_option? ~ default_char_option? ~ long_name_option?
}

string_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "string" ~
    DEC_NUMBER_LITERAL ~ "," ~ string_length ~
    big_endian_option? ~ trace_option? ~ standard_option? ~
    unit_option? ~ default_string_option? ~ long_name_option?
}

string_length = { "8" | "16" | "24" | "32" | "40" | "48" | "56" | "64" }

signed_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "signed" ~
    DEC_NUMBER_LITERAL ~ "," ~ DEC_NUMBER_LITERAL ~
    (bin_option | hex_option)? ~ big_endian_option? ~
    trace_option? ~ standard_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

unsigned_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "unsigned" ~
    DEC_NUMBER_LITERAL ~ "," ~ DEC_NUMBER_LITERAL ~
    (bin_option | hex_option)? ~ big_endian_option? ~
    trace_option? ~ standard_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

float_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "float" ~
    DEC_NUMBER_LITERAL ~ "," ~ "32" ~
    big_endian_option? ~ trace_option? ~ standard_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ default_option? ~ long_name_option?
}

double_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "double" ~
    DEC_NUMBER_LITERAL ~ "," ~ "64" ~
    big_endian_option? ~ trace_option? ~ standard_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ default_option? ~ long_name_option?
}

enum_variable = { "Var" ~ "=" ~ (ID | STRING) ~ ID ~
    DEC_NUMBER_LITERAL ~ "," ~ DEC_NUMBER_LITERAL ~
    (bin_option | hex_option)? ~ big_endian_option? ~
    trace_option? ~ standard_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    decimal_points_option? ~ long_name_option?
}

raw_variable = { "Var" ~ "=" ~ (ID | STRING) ~ "raw" ~
    DEC_NUMBER_LITERAL ~ "," ~ raw_length ~
    trace_option? ~ standard_option? ~
    unit_option? ~ default_raw_option? ~ long_name_option?
}

raw_length = { "8" | "16" | "24" | "32" | "40" | "48" | "56" | "64" }

// SIGNALS
bit_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "bit" ~
    unit_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

char_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "char" ~
    (bin_option | hex_option)? ~ big_endian_option? ~
    unit_option? ~ min_option? ~ max_option? ~ default_char_option? ~ long_name_option?
}

string_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "string" ~
    string_length ~ big_endian_option? ~
    unit_option? ~ default_string_option? ~ long_name_option?
}

signed_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "signed" ~
    DEC_NUMBER_LITERAL ~ (bin_option | hex_option)? ~
    big_endian_option? ~ unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

unsigned_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "unsigned" ~
    DEC_NUMBER_LITERAL ~ (bin_option | hex_option)? ~
    big_endian_option? ~ unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ enum_option? ~ default_option? ~ long_name_option?
}

float_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "float" ~
    big_endian_option? ~ unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ default_option? ~ enum_option? ~ long_name_option?
}

double_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "double" ~
    big_endian_option? ~ unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ default_option? ~ enum_option? ~ long_name_option?
}

enum_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ ID ~
    DEC_NUMBER_LITERAL ~ (bin_option | hex_option) ~ big_endian_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ default_option? ~ enum_option? ~ long_name_option?
}

raw_signal = { "Sig" ~ "=" ~ (ID | STRING) ~ "raw" ~
    raw_length ~ big_endian_option? ~
    unit_option? ~ factor_option? ~ offset_option? ~
    min_option? ~ max_option? ~ decimal_points_option? ~ enum_option? ~ default_string_option? ~ long_name_option?
}

unit_option = @{ "/u:" ~ (ID | STRING) }
factor_option = @{ "/f:" ~ FLOAT_LITERAL }
offset_option = @{ "/o:" ~ FLOAT_LITERAL }
min_option = @{ "/min:" ~ FLOAT_LITERAL }
max_option = @{ "/max:" ~ FLOAT_LITERAL }
decimal_points_option = @{ "/p:" ~ FLOAT_LITERAL }
enum_option = @{ "/e:" ~ ID }
default_option = @{ "/d:" ~ FLOAT_LITERAL }
default_string_option = @{"/d:" ~ "r" ~ ASCII*}
default_char_option = @{ "/d:" ~ (ASCII | "#" ~ DEC_NUMBER_LITERAL) }
default_raw_option = @{ "/d:" ~ "r" ~ DEC_NUMBER_LITERAL }
long_name_option = @{ "/ln:" ~ STRING }
